name: cd

on:
  push:
    tag: ["production-*"]
  
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: python:3-bullseye
    services:
      db:
        image: postgres:13-bullseye
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt

      - name: Django check
        run: python manage.py check

      - name: Django migrate
        run: python manage.py migrate
        env:
          POSTGRES_HOST: db
          POSTGRES_PORT: 5432
          POSTGRES_NAME: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Django test (with coverage)
        run: python -m coverage run --include 'main/*' manage.py test
        env:
          POSTGRES_HOST: db
          POSTGRES_PORT: 5432
          POSTGRES_NAME: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Coverage report
        run: python -m coverage report --show-missing --fail-under=100

  build:
    needs: test
    runs-on: ubuntu-latest
    container:
      image: docker:20
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: ECR login
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker build and push to ECR
        id: docker-build
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: hello-django
          IMAGE_TAG: ${{ github.ref_name }}

  provision:
    runs-on: ubuntu-latest
    container:
      image: terraform:1.2.4
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform plan
        run: terraform plan

      - name: Terraform apply
        run: terraform apply -auto-approve

  migrate:
    runs-on: ubuntu-latest
    container:
      image: python:3-bullseye
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt

      - name: Django check
        run: python manage.py check

      - name: Django migrate
        run: python manage.py migrate
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
